var e=Object.assign;import{defineComponent as t,inject as o,computed as a,watch as r,onMounted as i,onBeforeUnmount as l}from"vue";import{getMaps as d}from"./x5-gmaps.es.js";import{d as n}from"./debounce.js";var s=t({name:"gmapsRectangle",props:{bounds:{type:Object,default:void 0},clickable:{type:Boolean,default:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,default:"black"},fillOpacity:{type:[String,Number],default:.3},options:{type:Object,default:()=>({})},strokeColor:{type:String,default:"black"},strokeOpacity:{type:[String,Number],default:1},strokePosition:{type:[String,Number],default:0},strokeWeight:{type:[String,Number],default:3},visible:{type:Boolean,default:!0},zIndex:{type:[String,Number],default:0},delay:{type:[Number,String],default:15}},emits:["bounds_changed","click","contextmenu","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],setup(t,{emit:s}){let u=null;const c=[],g=o("$getmap"),p=o("$gmapHandleError"),m=e=>p(e,"Rectangle"),b=a((()=>{const o=e({},t.options);return"bounds"in t&&(o.bounds=t.bounds),void 0!==t.clickable&&(o.clickable=t.clickable),void 0!==t.draggable&&(o.draggable=t.draggable),void 0!==t.editable&&(o.editable=t.editable),void 0!==t.fillColor&&(o.fillColor=t.fillColor),void 0!==t.fillOpacity&&(o.fillOpacity=+t.fillOpacity),void 0!==t.strokeColor&&(o.strokeColor=t.strokeColor),void 0!==t.strokeOpacity&&(o.strokeOpacity=+t.strokeOpacity),void 0!==t.strokePosition&&(o.strokePosition=+t.strokePosition),void 0!==t.strokeWeight&&(o.strokeWeight=+t.strokeWeight),void 0!==t.visible&&(o.visible=t.visible),void 0!==t.zIndex&&(o.zIndex=+t.zIndex),o}));r((()=>t),(()=>{u&&u.setOptions(b.value)}),{deep:!0});return i((()=>{if(!b.value.bounds)return m(new Error("A bounds property is required by every rectangle. Set this as either a position prop, or a position property of the options prop."));d().then((o=>{const a=g();u=new o.Rectangle(e({map:a},b.value)),u?(e=>{const o=google.maps.event;c.push(o.addListener(e,"bounds_changed",n((()=>s("bounds_changed",e.getBounds())),+t.delay)),o.addListener(e,"drag",n((e=>s("drag",e.latLng.toJSON(),+t.delay)))),o.addListener(e,"mousemove",n((e=>s("mousemove",e)),+t.delay)),o.addListener(e,"click",(e=>s("click",e.latLng.toJSON()))),o.addListener(e,"contextmenu",(e=>s("contextmenu",e.latLng.toJSON()))),o.addListener(e,"dblclick",(e=>s("dblclick",e.latLng.toJSON()))),o.addListener(e,"dragend",(e=>s("dragend",e.latLng.toJSON()))),o.addListener(e,"dragstart",(e=>s("dragstart",e.latLng.toJSON()))),o.addListener(e,"mousedown",(e=>s("mousedown",e.latLng.toJSON()))),o.addListener(e,"mouseout",(e=>s("mouseout",e.latLng.toJSON()))),o.addListener(e,"mouseover",(e=>s("mouseover",e.latLng.toJSON()))),o.addListener(e,"mouseup",(e=>s("mouseup",e.latLng.toJSON()))),o.addListener(e,"rightclick",(e=>s("rightclick",e.latLng.toJSON()))))})(u):m(new Error("There was a problem creating the shape."))})).catch((e=>m(e)))})),l((()=>{c.forEach((e=>e.remove())),d().then((e=>{u&&u.setMap(null),e.event.clearInstanceListeners(u)})).catch((e=>m(e)))})),()=>{}}});export default s;
