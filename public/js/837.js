"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[837],{837:(e,a,t)=>{t.r(a),t.d(a,{default:()=>m});var d=t(8987),n=t(5166),o=t(9844),r=Object.assign;const s={center:{lat:-27.5,lng:153},zoom:12};var l=(0,n.aZ)({name:"GmapsMap",props:{delay:{type:[Number,String],default:15},timeout:{type:[Number,String],default:5e3},options:{type:Object,default:()=>({})}},emits:["bounds_changed","center_changed","click","contextmenu","dblclick","drag","dragend","dragstart","heading_changed","idle","maptypeid_changed","mousemove","mouseout","mouseover","projection_changed","rightclick","tilesloaded","tilt_changed","zoom_changed","mounted"],setup(e,{emit:a}){let t=(0,n.iH)(null),l=(0,n.iH)(!0),i=(0,n.iH)(null);const c=(0,n.iH)(),g=[],u=(e,a)=>i.value=`[${a}]: ${e.message}`;return(0,n.JJ)("$gmap",t),(0,n.JJ)("$getmap",(()=>t.value)),(0,n.JJ)("$gmapHandleError",u),(0,n.YP)((()=>e.options),(e=>{t.value&&t.value.setOptions(e)}),{deep:!0}),(0,n.bv)((()=>{(0,o.IC)().then((n=>{t.value=new n.Map(c.value,r(r({},s),e.options)),t.value?(t=>{const n=google.maps.event;g.push(n.addListener(t,"bounds_changed",(0,d.d)((()=>a("bounds_changed",t.getBounds())),+e.delay)),n.addListener(t,"center_changed",(0,d.d)((()=>a("center_changed",t.getCenter())),+e.delay)),n.addListener(t,"drag",(0,d.d)((e=>a("drag",e)),+e.delay)),n.addListener(t,"mousemove",(0,d.d)((e=>a("mousemove",e)),+e.delay)),n.addListener(t,"click",(e=>a("click",e.latLng.toJSON()))),n.addListener(t,"contextmenu",(e=>a("contextmenu",e.latLng.toJSON()))),n.addListener(t,"dblclick",(e=>a("dblclick",e.latLng.toJSON()))),n.addListener(t,"dragend",(e=>a("dragend",e))),n.addListener(t,"dragstart",(e=>a("dragstart",e))),n.addListener(t,"heading_changed",(e=>a("heading_changed",t.getHeading()))),n.addListener(t,"idle",(e=>a("idle",e))),n.addListener(t,"maptypeid_changed",(e=>a("maptypeid_changed",t.getMapTypeId()))),n.addListener(t,"mouseout",(e=>a("mouseout",e.latLng.toJSON()))),n.addListener(t,"mouseover",(e=>a("mouseover",e.latLng.toJSON()))),n.addListener(t,"projection_changed",(e=>a("projection_changed",t.getProjection()))),n.addListener(t,"rightclick",(e=>a("rightclick",e.latLng.toJSON()))),n.addListener(t,"tilesloaded",(e=>a("tilesloaded",e))),n.addListener(t,"tilt_changed",(e=>a("tilt_changed",t.getTilt()))),n.addListener(t,"zoom_changed",(e=>a("zoom_changed",t.getZoom()))))})(t.value):u(new Error("Map could not be loaded"),"Map"),l.value=!1,a("mounted",t.value)}))})),(0,n.Jd)((()=>{g.forEach((e=>e.remove())),t&&window.google.maps.event.clearInstanceListeners(t)})),{loading:l,error:i,map:t,root:c}}});const i={class:"gmaps-wrapper"},c={class:"gmaps-error"},g=(0,n.Wm)("span",{class:"gmaps-spinner"},null,-1),u={ref:"root",class:"gmaps-map"};l.render=function(e,a,t,d,o,r){return(0,n.wg)(),(0,n.j4)("div",i,[e.error?(0,n.WI)(e.$slots,"error",{key:0,error:e.error},(()=>[(0,n.Wm)("span",c,(0,n.zw)(e.error),1)])):e.loading?(0,n.WI)(e.$slots,"loading",{key:1},(()=>[g])):e.map?(0,n.WI)(e.$slots,"default",{key:2,map:e.map}):(0,n.kq)("",!0),(0,n.wy)((0,n.Wm)("div",u,null,512),[[n.F8,!e.error&&!e.loading&&!!e.map]])])};const m=l},8987:(e,a,t)=>{t.d(a,{d:()=>d});const d=(e,a=15)=>{let t;return function(...d){t&&clearTimeout(t),t=setTimeout((()=>e(...d)),a)}}}}]);