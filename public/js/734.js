"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[734],{3734:(e,t,o)=>{o.r(t),o.d(t,{default:()=>n});var a=o(5166),r=o(9844),i=o(8987),d=Object.assign;const n=(0,a.aZ)({name:"gmapsPolyline",props:{clickable:{type:Boolean,default:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},geodesic:{type:Boolean,default:!1},icons:{type:Array,default:void 0},options:{type:Object,default:()=>({})},path:{type:Array,default:void 0},strokeColor:{type:String,default:"black"},strokeOpacity:{type:[String,Number],default:1},strokePosition:{type:[String,Number],default:0},strokeWeight:{type:[String,Number],default:3},visible:{type:Boolean,default:!0},zIndex:{type:[String,Number],default:0},delay:{type:[Number,String],default:15}},emits:["click","contextmenu","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick","path_changed"],setup(e,{emit:t}){let o=null;const n=[],s=(0,a.f3)("$getmap"),l=(0,a.f3)("$gmapHandleError"),c=e=>l(e,"Polyline"),u=(0,a.Fl)((()=>{const t=d({},e.options);return void 0!==e.clickable&&(t.clickable=e.clickable),void 0!==e.draggable&&(t.draggable=e.draggable),void 0!==e.editable&&(t.editable=e.editable),void 0!==e.geodesic&&(t.geodesic=e.geodesic),void 0!==e.icons&&(t.icons=e.icons),void 0!==e.path&&(t.path=e.path),void 0!==e.strokeColor&&(t.strokeColor=e.strokeColor),void 0!==e.strokeOpacity&&(t.strokeOpacity=+e.strokeOpacity),void 0!==e.strokeWeight&&(t.strokeWeight=+e.strokeWeight),void 0!==e.visible&&(t.visible=e.visible),void 0!==e.zIndex&&(t.zIndex=+e.zIndex),t}));return(0,a.YP)((()=>e),(()=>{o&&o.setOptions(u.value)}),{deep:!0}),(0,a.bv)((()=>{if(!u.value.path)return c(new Error("A path property is required by every polyline. Set this as either a position prop, or a position property of the options prop."));(0,r.IC)().then((a=>{const r=s();o=new a.Polyline(d({map:r},u.value)),o?(o=>{const a=google.maps.event,r=()=>t("path_changed",o.getPath().getArray().map((e=>e.toJSON())));n.push(a.addListener(o,"drag",(0,i.d)((o=>t("drag",o.latLng.toJSON(),+e.delay)))),a.addListener(o,"mousemove",(0,i.d)((e=>t("mousemove",e)),+e.delay)),a.addListener(o,"click",(e=>t("click",e.latLng.toJSON()))),a.addListener(o,"contextmenu",(e=>t("contextmenu",e.latLng.toJSON()))),a.addListener(o,"dblclick",(e=>t("dblclick",e.latLng.toJSON()))),a.addListener(o,"dragend",(e=>t("dragend",e.latLng.toJSON()))),a.addListener(o,"dragstart",(e=>t("dragstart",e.latLng.toJSON()))),a.addListener(o,"mousedown",(e=>t("mousedown",e.latLng.toJSON()))),a.addListener(o,"mouseout",(e=>t("mouseout",e.latLng.toJSON()))),a.addListener(o,"mouseover",(e=>t("mouseover",e.latLng.toJSON()))),a.addListener(o,"mouseup",(e=>{t("mouseup",e.latLng.toJSON()),r()})),a.addListener(o,"rightclick",(e=>t("rightclick",e.latLng.toJSON()))),o.getPath().addListener("remove_at",(()=>r())),o.getPath().addListener("insert_at",(()=>r())),o.getPath().addListener("set_at",(()=>r())))})(o):c(new Error("There was a problem creating the shape."))})).catch((e=>c(e)))})),(0,a.Jd)((()=>{n.forEach((e=>e.remove())),(0,r.IC)().then((e=>{o&&o.setMap(null),e.event.clearInstanceListeners(o)})).catch((e=>c(e)))})),()=>{}}})},8987:(e,t,o)=>{o.d(t,{d:()=>a});const a=(e,t=15)=>{let o;return function(...a){o&&clearTimeout(o),o=setTimeout((()=>e(...a)),t)}}}}]);