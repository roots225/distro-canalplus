"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[904],{7904:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var o=n(5166),r=n(2219),i=n(489),a=Object.assign;const u=(0,o.aZ)({name:"gmapsRectangle",props:{bounds:{type:Object,default:void 0},clickable:{type:Boolean,default:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,default:"black"},fillOpacity:{type:[String,Number],default:.3},options:{type:Object,default:function(){return{}}},strokeColor:{type:String,default:"black"},strokeOpacity:{type:[String,Number],default:1},strokePosition:{type:[String,Number],default:0},strokeWeight:{type:[String,Number],default:3},visible:{type:Boolean,default:!0},zIndex:{type:[String,Number],default:0},delay:{type:[Number,String],default:15}},emits:["bounds_changed","click","contextmenu","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],setup:function(e,t){var n=t.emit,u=null,l=[],d=(0,o.f3)("$getmap"),s=(0,o.f3)("$gmapHandleError"),c=function(e){return s(e,"Rectangle")},f=(0,o.Fl)((function(){var t=a({},e.options);return"bounds"in e&&(t.bounds=e.bounds),void 0!==e.clickable&&(t.clickable=e.clickable),void 0!==e.draggable&&(t.draggable=e.draggable),void 0!==e.editable&&(t.editable=e.editable),void 0!==e.fillColor&&(t.fillColor=e.fillColor),void 0!==e.fillOpacity&&(t.fillOpacity=+e.fillOpacity),void 0!==e.strokeColor&&(t.strokeColor=e.strokeColor),void 0!==e.strokeOpacity&&(t.strokeOpacity=+e.strokeOpacity),void 0!==e.strokePosition&&(t.strokePosition=+e.strokePosition),void 0!==e.strokeWeight&&(t.strokeWeight=+e.strokeWeight),void 0!==e.visible&&(t.visible=e.visible),void 0!==e.zIndex&&(t.zIndex=+e.zIndex),t}));return(0,o.YP)((function(){return e}),(function(){u&&u.setOptions(f.value)}),{deep:!0}),(0,o.bv)((function(){if(!f.value.bounds)return c(new Error("A bounds property is required by every rectangle. Set this as either a position prop, or a position property of the options prop."));(0,r.IC)().then((function(t){var o=d();(u=new t.Rectangle(a({map:o},f.value)))?function(t){var o=google.maps.event;l.push(o.addListener(t,"bounds_changed",(0,i.d)((function(){return n("bounds_changed",t.getBounds())}),+e.delay)),o.addListener(t,"drag",(0,i.d)((function(t){return n("drag",t.latLng.toJSON(),+e.delay)}))),o.addListener(t,"mousemove",(0,i.d)((function(e){return n("mousemove",e)}),+e.delay)),o.addListener(t,"click",(function(e){return n("click",e.latLng.toJSON())})),o.addListener(t,"contextmenu",(function(e){return n("contextmenu",e.latLng.toJSON())})),o.addListener(t,"dblclick",(function(e){return n("dblclick",e.latLng.toJSON())})),o.addListener(t,"dragend",(function(e){return n("dragend",e.latLng.toJSON())})),o.addListener(t,"dragstart",(function(e){return n("dragstart",e.latLng.toJSON())})),o.addListener(t,"mousedown",(function(e){return n("mousedown",e.latLng.toJSON())})),o.addListener(t,"mouseout",(function(e){return n("mouseout",e.latLng.toJSON())})),o.addListener(t,"mouseover",(function(e){return n("mouseover",e.latLng.toJSON())})),o.addListener(t,"mouseup",(function(e){return n("mouseup",e.latLng.toJSON())})),o.addListener(t,"rightclick",(function(e){return n("rightclick",e.latLng.toJSON())})))}(u):c(new Error("There was a problem creating the shape."))})).catch((function(e){return c(e)}))})),(0,o.Jd)((function(){l.forEach((function(e){return e.remove()})),(0,r.IC)().then((function(e){u&&u.setMap(null),e.event.clearInstanceListeners(u)})).catch((function(e){return c(e)}))})),function(){}}})},489:(e,t,n)=>{n.d(t,{d:()=>o});var o=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:15;return function(){for(var o=arguments.length,r=new Array(o),i=0;i<o;i++)r[i]=arguments[i];t&&clearTimeout(t),t=setTimeout((function(){return e.apply(void 0,r)}),n)}}}}]);