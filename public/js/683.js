"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[683],{9683:(e,t,a)=>{a.r(t),a.d(t,{default:()=>r});var n=a(5166),i=a(9844),d=a(8987),o=Object.assign;const r=(0,n.aZ)({name:"GmapsMarker",props:{animation:{type:Number,default:void 0},clickable:{type:Boolean,default:void 0},draggable:{type:Boolean,default:void 0},icon:{type:[String,Object],default:void 0},label:{type:[String,Object],default:void 0},opacity:{type:[String,Number],default:void 0},options:{type:Object,default:()=>({})},position:{type:Object,default:void 0},title:{type:String,default:void 0},visible:{type:Boolean,default:void 0},zIndex:{type:[String,Number],default:void 0},delay:{type:[Number,String],default:15}},emits:["animation_changed","click","clickable_changed","contextmenu","cursor_changed","dblclick","drag","dragend","draggable_changed","dragstart","flat_changed","icon_changed","mousedown","mouseout","mouseover","mouseup","position_changed","rightclick","shape_changed","title_changed","visible_changed","zindex_changed"],setup(e,{emit:t}){let a=null;const r=[],l=(0,n.f3)("$getmap"),c=(0,n.f3)("$gmapHandleError"),s=e=>c(e,"Marker"),g=(0,n.Fl)((()=>{const t=o({},e.options);return void 0!==e.animation&&(t.animation=e.animation),void 0!==e.clickable&&(t.clickable=e.clickable),void 0!==e.draggable&&(t.draggable=e.draggable),void 0!==e.icon&&(t.icon=e.icon),void 0!==e.label&&(t.label=e.label),void 0!==e.opacity&&(t.opacity=+e.opacity),void 0!==e.position&&(t.position=e.position),void 0!==e.title&&(t.title=e.title),void 0!==e.visible&&(t.visible=e.visible),void 0!==e.zIndex&&(t.zIndex=+e.zIndex),t}));return(0,n.YP)((()=>e),(()=>{a&&a.setOptions(g.value)}),{deep:!0}),(0,n.bv)((()=>{if(!g.value.position)return s(new Error("A position is required by every marker. Set this as either a position prop, or a position property of the options prop."));(0,i.IC)().then((n=>{const i=l();a=new n.Marker(o({map:i},g.value)),a?(a=>{const n=google.maps.event;r.push(n.addListener(a,"position_changed",(0,d.d)((()=>{var e;return t("position_changed",null==(e=a.getPosition())?void 0:e.toJSON())}),+e.delay)),n.addListener(a,"drag",(0,d.d)((a=>t("drag",a.latLng.toJSON(),+e.delay)))),n.addListener(a,"animation_changed",(()=>t("animation_changed",a.getAnimation()))),n.addListener(a,"click",(e=>t("click",e.latLng.toJSON()))),n.addListener(a,"clickable_changed",(()=>t("clickable_changed",a.getClickable()))),n.addListener(a,"contextmenu",(e=>t("contextmenu",e.latLng.toJSON()))),n.addListener(a,"cursor_changed",(()=>t("cursor_changed",a.getCursor()))),n.addListener(a,"dblclick",(e=>t("dblclick",e.latLng.toJSON()))),n.addListener(a,"dragend",(e=>t("dragend",e.latLng.toJSON()))),n.addListener(a,"draggable_changed",(()=>t("draggable_changed",a.getDraggable()))),n.addListener(a,"dragstart",(e=>t("dragstart",e.latLng.toJSON()))),n.addListener(a,"flat_changed",(e=>t("flat_changed",e))),n.addListener(a,"icon_changed",(()=>t("icon_changed",a.getIcon()))),n.addListener(a,"mousedown",(e=>t("mousedown",e.latLng.toJSON()))),n.addListener(a,"mouseout",(e=>t("mouseout",e.latLng.toJSON()))),n.addListener(a,"mouseover",(e=>t("mouseover",e.latLng.toJSON()))),n.addListener(a,"mouseup",(e=>t("mouseup",e.latLng.toJSON()))),n.addListener(a,"rightclick",(e=>t("rightclick",e.latLng.toJSON()))),n.addListener(a,"shape_changed",(()=>t("shape_changed",a.getShape()))),n.addListener(a,"title_changed",(()=>t("title_changed",a.getTitle()))),n.addListener(a,"visible_changed",(()=>t("visible_changed",a.getVisible()))),n.addListener(a,"zindex_changed",(()=>t("zindex_changed",a.getZIndex()))))})(a):s(new Error("There was a problem creating the marker."))})).catch((e=>s(e)))})),(0,n.Jd)((()=>{r.forEach((e=>e.remove())),(0,i.IC)().then((e=>{a&&a.setMap(null),e.event.clearInstanceListeners(a)})).catch((e=>s(e)))})),()=>{}}})},8987:(e,t,a)=>{a.d(t,{d:()=>n});const n=(e,t=15)=>{let a;return function(...n){a&&clearTimeout(a),a=setTimeout((()=>e(...n)),t)}}}}]);